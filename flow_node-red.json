[
    {
        "id": "mqtt_ocupacao",
        "type": "mqtt in",
        "z": "flow1",
        "name": "Ocupa√ß√£o",
        "topic": "abrigo/001/ocupacao",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "x": 120,
        "y": 80,
        "wires": [["processar_ocupacao"]]
    },
    {
        "id": "mqtt_ambiente",
        "type": "mqtt in",
        "z": "flow1",
        "name": "Ambiente", 
        "topic": "abrigo/001/ambiente",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "x": 120,
        "y": 160,
        "wires": [["processar_ambiente"]]
    },
    {
        "id": "mqtt_recursos",
        "type": "mqtt in",
        "z": "flow1", 
        "name": "Recursos",
        "topic": "abrigo/001/recursos",
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "x": 120,
        "y": 240,
        "wires": [["processar_recursos"]]
    },
    {
        "id": "mqtt_emergencia",
        "type": "mqtt in",
        "z": "flow1",
        "name": "Emerg√™ncia",
        "topic": "abrigo/001/emergencia", 
        "qos": "0",
        "datatype": "json",
        "broker": "mqtt_broker",
        "x": 120,
        "y": 320,
        "wires": [["processar_emergencia"]]
    },
    {
        "id": "processar_ocupacao",
        "type": "function",
        "z": "flow1",
        "name": "Processar Ocupa√ß√£o",
        "func": "// Processar dados de ocupa√ß√£o\nvar dados = msg.payload;\n\n// Armazenar em contexto global\ncontext.global.set('ocupacao_atual', dados.pessoas_atual);\ncontext.global.set('capacidade_maxima', dados.capacidade_maxima);\ncontext.global.set('porcentagem_ocupacao', dados.porcentagem_ocupacao);\n\n// Preparar para gauge\nmsg.payload = dados.porcentagem_ocupacao;\nmsg.topic = \"Ocupa√ß√£o\";\n\n// Preparar dados para texto\nvar msgTexto = {\n    payload: `${dados.pessoas_atual}/${dados.capacidade_maxima} pessoas (${dados.porcentagem_ocupacao.toFixed(1)}%)`,\n    topic: \"status_ocupacao\"\n};\n\nreturn [msg, msgTexto];",
        "outputs": 2,
        "x": 320,
        "y": 80,
        "wires": [["dashboard_gauge_ocupacao"], ["dashboard_text_ocupacao"]]
    },
    {
        "id": "processar_ambiente",
        "type": "function",
        "z": "flow1", 
        "name": "Processar Ambiente",
        "func": "// Processar dados ambientais\nvar dados = msg.payload;\n\n// Armazenar em contexto global\ncontext.global.set('temperatura', dados.temperatura);\ncontext.global.set('umidade', dados.umidade);\n\n// Preparar dados para gr√°fico\nvar msgTemp = {\n    payload: dados.temperatura,\n    topic: \"Temperatura\"\n};\n\nvar msgUmid = {\n    payload: dados.umidade,\n    topic: \"Umidade\"\n};\n\n// Avaliar condi√ß√µes\nvar condicoes = 'NORMAL';\nvar cor = 'green';\nif (dados.temperatura > 35 || dados.temperatura < 10) {\n    condicoes = 'CR√çTICA';\n    cor = 'red';\n} else if (dados.temperatura > 30 || dados.umidade > 80) {\n    condicoes = 'ATEN√á√ÉO';\n    cor = 'orange';\n}\n\nvar msgStatus = {\n    payload: condicoes,\n    color: cor\n};\n\nreturn [msgTemp, msgUmid, msgStatus];",
        "outputs": 3,
        "x": 320, 
        "y": 160,
        "wires": [["dashboard_chart_ambiente"], ["dashboard_chart_ambiente"], ["dashboard_text_ambiente"]]
    },
    {
        "id": "processar_recursos",
        "type": "function",
        "z": "flow1",
        "name": "Processar Recursos", 
        "func": "// Processar dados de recursos\nvar dados = msg.payload;\n\n// Armazenar em contexto global\ncontext.global.set('nivel_agua', dados.nivel_agua);\ncontext.global.set('energia_bateria', dados.energia_bateria);\ncontext.global.set('alimentos', dados.alimentos);\n\n// Preparar mensagens para cada recurso\nvar msgAgua = {\n    payload: dados.nivel_agua,\n    topic: \"√Ågua\"\n};\n\nvar msgEnergia = {\n    payload: dados.energia_bateria,\n    topic: \"Energia\"\n};\n\nvar msgAlimentos = {\n    payload: dados.alimentos,\n    topic: \"Alimentos\"\n};\n\n// Identificar recursos cr√≠ticos\nvar criticos = [];\nif (dados.nivel_agua < 20) criticos.push('√Ågua');\nif (dados.energia_bateria < 30) criticos.push('Energia');\nif (dados.alimentos < 25) criticos.push('Alimentos');\n\nvar msgCriticos = {\n    payload: criticos.length > 0 ? `‚ö†Ô∏è Cr√≠ticos: ${criticos.join(', ')}` : '‚úÖ Todos recursos OK',\n    color: criticos.length > 0 ? 'red' : 'green'\n};\n\nreturn [msgAgua, msgEnergia, msgAlimentos, msgCriticos];",
        "outputs": 4,
        "x": 320,
        "y": 240,
        "wires": [["dashboard_gauge_agua"], ["dashboard_gauge_energia"], ["dashboard_gauge_alimentos"], ["dashboard_text_recursos"]]
    },
    {
        "id": "processar_emergencia",
        "type": "function",
        "z": "flow1",
        "name": "Processar Emerg√™ncia",
        "func": "// Processar alertas de emerg√™ncia\nvar dados = msg.payload;\n\n// Log da emerg√™ncia\nnode.warn('EMERG√äNCIA DETECTADA: ' + dados.tipo_emergencia);\n\n// Preparar mensagem de alerta\nmsg.payload = `üö® EMERG√äNCIA: ${dados.tipo_emergencia} - N√≠vel: ${dados.nivel}`;\nmsg.color = \"red\";\n\nreturn msg;",
        "outputs": 1,
        "x": 320,
        "y": 320, 
        "wires": [["dashboard_text_emergencia"]]
    },
    {
        "id": "dashboard_gauge_ocupacao",
        "type": "ui_gauge",
        "z": "flow1",
        "name": "Ocupa√ß√£o do Abrigo",
        "group": "dashboard_group",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Ocupa√ß√£o (%)",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": 60,
        "seg2": 85,
        "x": 540,
        "y": 60,
        "wires": []
    },
    {
        "id": "dashboard_text_ocupacao",
        "type": "ui_text",
        "z": "flow1",
        "name": "Status Ocupa√ß√£o",
        "group": "dashboard_group",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "dashboard_chart_ambiente",
        "type": "ui_chart",
        "z": "flow1", 
        "name": "Condi√ß√µes Ambientais",
        "group": "dashboard_group",
        "order": 3,
        "width": 12,
        "height": 4,
        "label": "Temperatura (¬∞C) e Umidade (%)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 20,
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "x": 540,
        "y": 140,
        "wires": [[]]
    },
    {
        "id": "dashboard_text_ambiente",
        "type": "ui_text",
        "z": "flow1",
        "name": "Status Ambiente",
        "group": "dashboard_group",
        "order": 4,
        "width": 12,
        "height": 1,
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "dashboard_gauge_agua",
        "type": "ui_gauge",
        "z": "flow1",
        "name": "N√≠vel √Ågua",
        "group": "dashboard_group",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "√Ågua",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": ["#ca3838","#e6e600","#00b500"],
        "seg1": 20,
        "seg2": 50,
        "x": 520,
        "y": 220,
        "wires": []
    },
    {
        "id": "dashboard_gauge_energia",
        "type": "ui_gauge",
        "z": "flow1",
        "name": "N√≠vel Energia",
        "group": "dashboard_group",
        "order": 6,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Energia",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": ["#ca3838","#e6e600","#00b500"],
        "seg1": 30,
        "seg2": 60,
        "x": 540,
        "y": 260,
        "wires": []
    },
    {
        "id": "dashboard_gauge_alimentos",
        "type": "ui_gauge",
        "z": "flow1",
        "name": "N√≠vel Alimentos",
        "group": "dashboard_group",
        "order": 7,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Alimentos",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": ["#ca3838","#e6e600","#00b500"],
        "seg1": 25,
        "seg2": 50,
        "x": 560,
        "y": 300,
        "wires": []
    },
    {
        "id": "dashboard_text_recursos",
        "type": "ui_text",
        "z": "flow1",
        "name": "Status Recursos",
        "group": "dashboard_group",
        "order": 8,
        "width": 12,
        "height": 1,
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 540,
        "y": 340,
        "wires": []
    },
    {
        "id": "dashboard_text_emergencia",
        "type": "ui_text",
        "z": "flow1",
        "name": "Alertas Emerg√™ncia",
        "group": "dashboard_group",
        "order": 9,
        "width": 12,
        "height": 2,
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 540,
        "y": 380,
        "wires": []
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "Broker P√∫blico",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "nodered_abrigo",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true
    },
    {
        "id": "dashboard_group",
        "type": "ui_group", 
        "name": "Monitoramento Abrigo 001",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "Sistema Abrigue-se IoT",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]